
[env]
    MISE_ENV = "test"
    deployment_key = "saas"
    deployment_region = "sjc"

    test_user = "test@"
    db_host = "localhost"
    db_name = "postgres"
    db_user = "postgres"
    db_port = "5432"
    db_password = "password"

    site_domain = "saasrx.dev"

    admin_email = "admin@test.localhost"
    email_domain = "updates.{{ env.site_domain }}"
    email_from = "no-reply@{{ env.email_domain }}"
    email_to = "dev@localhost"


    resend_api_key = "re_"

    # _.python.venv.path = "{{ config_root }}/.venv"
    # _.python.venv.create = true


[tasks.dev]
    run = "uv run reflex run"

[tasks.wdev]
    run = "trash .web/ && uv run reflex run"

[tasks."db:clean"]
    description = "Clean by trashing alembic & db files"
    run = "trash reflex.db alembic/ alembic.ini"

[tasks."db:init"]
    description = "Initialize the database"
    run = "uv run reflex db init"

[tasks."db:info"]
    # use this to verify the db info
    description = "Prints the db info"
    run = '''
    echo USING: $status_mode \\n\
    [DB INFO] $db_host $db_user $db_name \\n\
    [STRIPE INFO] $stripe_pub_key
    '''

[tasks."db:seed"]
    run = "python scripts/dbseed.py"

[tasks."db:reset"]
    description = "Reset the database by clean and then reinit"
    depends = ["db:clean"]
    # need to run like this so that it runs sequentially, otherwise must pass --jobs or MISE_JOBS
    run = "mise run db:init"

[tasks."db:migrate"]
    run = "uv run reflex db makemigrations && uv run reflex db migrate"

[tasks."test:email"]
    description = "Run the email tests"
    run = "uv run python -m pytest tests/test_email.py"

[tasks."test:all"]
    description = "Run all the tests"
    run = "uv run python -m pytest tests/"

[tasks.release]
    #  allow users to download the zip until github integration is setup
    description = "Create a release zip to download the code"
    run = "git archive -o releases/starterkit.zip HEAD"

[tasks.docs] # deploy the website with mkdocs

    description = "Deploy the website with mkdocs"
    run = "cd docs && uv run mkdocs serve"
